import{_ as e,c as a,o as t,O as s}from"./chunks/framework.8e4cc2b6.js";const o="/images/blog/tutorial-build-reservation/inherit.png",f=JSON.parse('{"title":"How to build a reservation module","description":["We show you the way to build a reservation module step by step"],"frontmatter":{"article":true,"date":"2023-03-02T00:00:00.000Z","image":["blog/banner/tutorial_reservation_module.png"],"description":["We show you the way to build a reservation module step by step"],"author":"Sunny May"},"headers":[],"relativePath":"articles/build-reservation-module.md","lastUpdated":1682385998000}'),n={name:"articles/build-reservation-module.md"},l=s('<h1 id="how-to-build-a-reservation-module" tabindex="-1">How to build a reservation module <a class="header-anchor" href="#how-to-build-a-reservation-module" aria-label="Permalink to &quot;How to build a reservation module&quot;">​</a></h1><p>This guide shows you how to build a module under the <a href="./reservation-cui-design.html">reservation CUI design</a>. Since <a href="./../reference/plugins/services/reservation/reservation-api.html">reservation APIs</a> offer service interfaces that cover typical booking scenarios, we will use these APIs to create a reservation system in a specific domain, such as table reservations.</p><p>The table reservation module is intended to help users to book, view or cancel reservation for specific dates and times with a set number of guests. Its reusable nature allows builders to customize the table reservation service within their chatbots. For instance, builders can configure their own table types and capacities that fit their specific restaurant.</p><p>We will take <a href="./reservation-cui-design.html#make-a-reservation">making a reservation</a> as an example to show you the steps to build a module. To know how the last two services are built, you can check the <a href="https://build.opencui.io/org/me.restaurant/agent/tableReservation/struct/type" target="_blank" rel="noreferrer">table reservation module</a> to learn more information.</p><h2 id="before-you-start" tabindex="-1">Before you start <a class="header-anchor" href="#before-you-start" aria-label="Permalink to &quot;Before you start&quot;">​</a></h2><ol><li><a href="./../guide/signingup.html#sign-up">Sign up</a> for an account and log in to <a href="https://build.opencui.io/login" target="_blank" rel="noreferrer">OpenCUI</a>.</li><li>We assume that you are already familiar with the procedures on the platform. If not, we recommend that you read the <a href="./../guide/">Quickstart guide</a> first.</li></ol><h2 id="create-module-tablereservation" tabindex="-1">Create module: tableReservation <a class="header-anchor" href="#create-module-tablereservation" aria-label="Permalink to &quot;Create module: tableReservation&quot;">​</a></h2><p>To begin with, create a module and fill out the creating-project form following these settings:</p><ul><li><strong>Project label</strong>: enter <code>tableReservation</code>.</li><li><strong>Template</strong>: select <strong>LibraryWithCore</strong>. We need to use types from io.opencui.core libraray, this template imported that library.</li><li><strong>Languages</strong>: add <strong>English(en)</strong>.</li><li><strong>Enable service interface</strong>: turn this toggle off. We will reuse existing service, so there is no service needed to be declared in this module.</li></ul><h2 id="import-the-service" tabindex="-1">Import the service <a class="header-anchor" href="#import-the-service" aria-label="Permalink to &quot;Import the service&quot;">​</a></h2><p>In order to use functions declared in the reservation APIs, you need to import that service first.</p><ol><li>Enter the <a href="https://build.opencui.io/org/services.opencui/agent/reservation/struct/service_schema" target="_blank" rel="noreferrer">reservation module</a> where the service is declared and import it into the <code>tableReservation</code> module you just created.</li></ol><h2 id="create-local-types-for-the-service" tabindex="-1">Create local types for the service <a class="header-anchor" href="#create-local-types-for-the-service" aria-label="Permalink to &quot;Create local types for the service&quot;">​</a></h2><p>Based on the service, you may need to create some local types which are decided by your own business logic. For example, some services provide abstract types, so business can create their own types inheriting those interfaces. On one hand, these local types inherit the features of the parent types, on the other hand, you can add other features to these types. Moreover, your business may require extra processing of the return data which needs a new type to describe its schema.</p><h3 id="build-frame-table" tabindex="-1">Build frame: Table <a class="header-anchor" href="#build-frame-table" aria-label="Permalink to &quot;Build frame: Table&quot;">​</a></h3><p>According to the description of <a href="./../reference/plugins/services/reservation/reservation-api.html#resource">Resource</a> type from reservation APIs, it&#39;s an abstract type which means you can create resource, inherit this type and add features based on your own business. In this guide, it&#39;s about table reservation business, so the resource we&#39;re talking about here is table. Apart from those existing properties in the <strong>Resource</strong> type, your table resource should also have its own property like capacity, which represents how many guests this table can hold.</p><h4 id="schema-layer-declare-a-frame" tabindex="-1">Schema layer: declare a frame <a class="header-anchor" href="#schema-layer-declare-a-frame" aria-label="Permalink to &quot;Schema layer: declare a frame&quot;">​</a></h4><p>At this layer, you will create a &quot;Table&quot; frame to represent that resource, inherit <strong>Resource</strong> frame and add its own property as a slot.</p><h5 id="create-the-frame" tabindex="-1">Create the frame <a class="header-anchor" href="#create-the-frame" aria-label="Permalink to &quot;Create the frame&quot;">​</a></h5><p>Inside <code>tableReservation</code> module</p><ol><li><p>Create a frame labeled as <code>Table</code>.</p></li><li><p>Inside the <code>Table</code> frame, inherit <code>services.opencui.reservation.Resource</code>.</p><p><img src="'+o+`" alt="inherit"></p></li></ol><h5 id="add-slots" tabindex="-1">Add slots <a class="header-anchor" href="#add-slots" aria-label="Permalink to &quot;Add slots&quot;">​</a></h5><p>Then add a slot called <strong>capacity</strong> with type <strong>kotlin.Int</strong>. This feature shows the maximum number of guests that the table seats.</p><h4 id="annotate-type-table" tabindex="-1">Annotate type: Table <a class="header-anchor" href="#annotate-type-table" aria-label="Permalink to &quot;Annotate type: Table&quot;">​</a></h4><p>Since this type does not need to be exposed conversationally, there is no need to add dialog annotation.</p><h2 id="build-cui-for-the-service" tabindex="-1">Build CUI for the service <a class="header-anchor" href="#build-cui-for-the-service" aria-label="Permalink to &quot;Build CUI for the service&quot;">​</a></h2><p>In OpenCUI, you can describe your service with <a href="./../guide/concepts.html#type-systems">type systems</a>. In this section, you create a <a href="./../guide/concepts.html#frames">frame</a> to describe your table resource and a <a href="./../guide/concepts.html#skills">skill</a> to interact with users. After that, you use native functions to implement your business logic.</p><h3 id="build-skill-makereservation" tabindex="-1">Build skill: MakeReservation <a class="header-anchor" href="#build-skill-makereservation" aria-label="Permalink to &quot;Build skill: MakeReservation&quot;">​</a></h3><h4 id="schema-layer-declare-a-skill" tabindex="-1">Schema layer: declare a skill <a class="header-anchor" href="#schema-layer-declare-a-skill" aria-label="Permalink to &quot;Schema layer: declare a skill&quot;">​</a></h4><h5 id="create-the-skill" tabindex="-1">Create the skill <a class="header-anchor" href="#create-the-skill" aria-label="Permalink to &quot;Create the skill&quot;">​</a></h5><p>Create a <a href="./../guide/concepts.html#skills">skill</a> called <strong>MakeReservation</strong> in this module.</p><h5 id="add-slots-1" tabindex="-1">Add slots <a class="header-anchor" href="#add-slots-1" aria-label="Permalink to &quot;Add slots&quot;">​</a></h5><p>Before proceeding, ensure that the <code>components</code> module exists under the <strong>Dependencies</strong> tab. If it doesn&#39;t, import <a href="https://build.opencui.io/org/io.opencui/agent/components/struct/frame/63c8aea6517f06c1880e3cff" target="_blank" rel="noreferrer">components module</a> to the <code>hours</code> module first. After successful import, go back to <code>hours</code> module and refresh your webpage.</p><p>Add the following slots to this skill.</p><table><thead><tr><th style="text-align:left;">Label</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">userIdentifier</td><td style="text-align:left;"><a href="./../reference/annotations/systemcomponent.html#user-identifier">UserIdentifier</a></td><td style="text-align:left;">The identifier of the user. <br> Automatically filled by the runtime.</td></tr><tr><td style="text-align:left;">location</td><td style="text-align:left;"><a href="./../reference/plugins/services/reservation/reservation-api.html#location">Location</a></td><td style="text-align:left;">The location of the restaurant. <br> Filled by the user or the business. If it&#39;s filled by the user, you should add instances of the locations to <strong>services.opencui.reservation.LocationName</strong>.</td></tr><tr><td style="text-align:left;">resourceType</td><td style="text-align:left;"><a href="https://build.opencui.io/org/services.opencui/agent/reservation/struct/entity/63b50c47fb84b020c72ba4de" target="_blank" rel="noreferrer">ResourceType</a></td><td style="text-align:left;">The type of resource. <br> Filled by the user or the business. If it&#39;s filled by the user, you should add instances of the types to <strong>services.opencui.reservation.ResourceType</strong>.</td></tr><tr><td style="text-align:left;">duration</td><td style="text-align:left;">kotlin.Int</td><td style="text-align:left;">The duration of the reservation, in seconds. <br> Filled by the user or the business.</td></tr><tr><td style="text-align:left;">number</td><td style="text-align:left;">kotlin.Int</td><td style="text-align:left;">The numbers of guests. <br> Filled by the user.</td></tr><tr><td style="text-align:left;">datePicker</td><td style="text-align:left;"><a href="./../reference/plugins/components/datepicker/datepicker-design.html#schema-representation">DatePicker</a></td><td style="text-align:left;">The date of the reservation. <br> Filled by the user.</td></tr><tr><td style="text-align:left;">timePicker</td><td style="text-align:left;"><a href="https://build.opencui.io/org/io.opencui/agent/components/struct/frame/63c8af37517f06c1880e3d06" target="_blank" rel="noreferrer">TimePicker</a></td><td style="text-align:left;">The start time of the reservation. <br> Filled by the user.</td></tr></tbody></table><p>In order to gain access to function interfaces, a service must be declared:</p><ul><li>Back to the <code>ShowHours</code> skill, in the <strong>Services</strong> section, select <strong>IHours</strong>.</li><li>Use the default label <code>hours</code> and click <strong>Save</strong>.</li></ul><h5 id="define-function-filtertables" tabindex="-1">Define function: filterTables <a class="header-anchor" href="#define-function-filtertables" aria-label="Permalink to &quot;Define function: filterTables&quot;">​</a></h5><p>In this module, we follow such a rule: the number of guests determines which capacity of the table the user books. If the number of guests is 2 and there is a table of which capacity is 2, no matter whether that table is available, the user isn&#39;t allowed to book any table of which capacity is more than 2.</p><p>Now, you need to add a native function to filter the resources by the number of guests. Besides, in order to reduce the number of function calls, you can also use a native function to make a reservation.</p><ol><li>To use the functions in the reservation interfaces, you need to declare the service first. <ul><li>On the <strong>MakeReservation</strong> skill page, in the <strong>Services</strong> section, select <strong>services.opencui.reservation.IReservation service</strong>.</li><li>Use the default service label and save it.</li></ul></li><li>Add a native function that filters the input resources by the number of guests and returns a list of tables. <ul><li>Function label: <strong>filterTables</strong></li><li>Input parameter: <strong>services.opencui.reservation.Resource</strong>, multi-valued, not null</li><li>Return Type: <strong>Table</strong>, multi-valued, not null</li><li>Implementation:</li></ul><div class="language-kotlin"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// If the resourceList is empty, just return an empty list</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">resourceList</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">isEmpty</span><span style="color:#89DDFF;">())</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> emptyList</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Get a list of unique capacities in ascending order</span></span>
<span class="line"><span style="color:#C792EA;">val</span><span style="color:#A6ACCD;"> capacityList </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;"> reservation</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">listResource</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">location</span><span style="color:#89DDFF;">!!,</span><span style="color:#A6ACCD;"> resourceType</span><span style="color:#89DDFF;">!!,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">as</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">List</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Table</span><span style="color:#89DDFF;">&gt;).</span><span style="color:#A6ACCD;">map</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">it </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> it</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">capacity</span><span style="color:#89DDFF;">!!}.</span><span style="color:#A6ACCD;">distinct</span><span style="color:#89DDFF;">().</span><span style="color:#A6ACCD;">sorted</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Find the minimum capacity which is not smaller than the number of people</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> capacity</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">Int</span><span style="color:#A6ACCD;"> ?</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">i </span><span style="color:#89DDFF;">in</span><span style="color:#A6ACCD;"> capacityList</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#F07178;">   </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">i </span><span style="color:#89DDFF;">&gt;=</span><span style="color:#F07178;"> number</span><span style="color:#89DDFF;">!!){</span></span>
<span class="line"><span style="color:#F07178;">      capacity </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> i</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">break</span></span>
<span class="line"><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Return an empty list if there is no suitable capacity</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">capacity </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> emptyList</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Filter the tables by the capacity</span></span>
<span class="line"><span style="color:#C792EA;">val</span><span style="color:#A6ACCD;"> filteredResource </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">resourceList </span><span style="color:#89DDFF;">as</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">List</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Table</span><span style="color:#89DDFF;">&gt;).</span><span style="color:#A6ACCD;">filter</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    it</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">capacity </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> capacity</span><span style="color:#89DDFF;">!!</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> filteredResource</span></span></code></pre></div></li></ol><h5 id="define-function-makereservation" tabindex="-1">Define function: makeReservation <a class="header-anchor" href="#define-function-makereservation" aria-label="Permalink to &quot;Define function: makeReservation&quot;">​</a></h5><ol start="3"><li>Add a native function to make a reservation. If the reservation is made successlly, return <code>true</code>. Otherwise, returns <code>false</code>. <ul><li>Function label: <strong>makeReservation</strong></li><li>Input parameter: none</li><li>Return Type: <strong>kotlin.Boolean</strong>, not null</li><li>Implementation:</li></ul><div class="language-kotlin"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// Get available tables</span></span>
<span class="line"><span style="color:#C792EA;">val</span><span style="color:#A6ACCD;"> availableTables </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> filterTables</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">reservation</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">listResource</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">location</span><span style="color:#89DDFF;">!!,</span><span style="color:#A6ACCD;"> resourceType</span><span style="color:#89DDFF;">!!,</span><span style="color:#A6ACCD;"> datePicker</span><span style="color:#89DDFF;">!!.</span><span style="color:#A6ACCD;">date</span><span style="color:#89DDFF;">!!,</span><span style="color:#A6ACCD;"> timePicker</span><span style="color:#89DDFF;">!!.</span><span style="color:#A6ACCD;">time</span><span style="color:#89DDFF;">!!,</span><span style="color:#A6ACCD;"> duration</span><span style="color:#89DDFF;">!!))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Make a reservation if there is an available table</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">availableTables</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">isNotEmpty</span><span style="color:#89DDFF;">()){</span></span>
<span class="line"><span style="color:#F07178;">    reservation</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">makeReservation</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">userIdentifier</span><span style="color:#89DDFF;">!!.</span><span style="color:#F07178;">userId</span><span style="color:#89DDFF;">!!,</span><span style="color:#F07178;"> datePicker</span><span style="color:#89DDFF;">!!.</span><span style="color:#F07178;">date</span><span style="color:#89DDFF;">!!,</span><span style="color:#F07178;"> timePicker</span><span style="color:#89DDFF;">!!.</span><span style="color:#F07178;">time</span><span style="color:#89DDFF;">!!,</span><span style="color:#F07178;"> duration</span><span style="color:#89DDFF;">!!,</span><span style="color:#F07178;"> availableTables</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">first</span><span style="color:#89DDFF;">())</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">null</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">false</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div></li></ol><h4 id="annotate-type-makereservation" tabindex="-1">Annotate type: MakeReservation <a class="header-anchor" href="#annotate-type-makereservation" aria-label="Permalink to &quot;Annotate type: MakeReservation&quot;">​</a></h4><p>OpenCUI provides <a href="./../reference/annotations/overview.html">dialog annotations</a> to define how the chatbot interacts with users, and <a href="./../reference/glossary.html#response">responses</a> to display the result. In this section, you add dialog annotations and responses to the <strong>MakeReservation</strong> skill.</p><p>Before you start, here are some assumptions about this business:</p><ol><li>There is only one location for this restaurant.</li><li>For table reservation, the type of resource should be &quot;table&quot;.</li><li>There is only one duration among all the resources.</li></ol><p>Under the above assumptions, location, resource type, and duration can be given by the business.</p><p>During the slot filling process, the following dialog annotations will be used.</p><ol><li><p><a href="./../reference/annotations/init.html">Initialization</a>: when a slot is filled by the business, you can use initialization to provide a value for this slot. Here are the initial values for each slot:</p><ul><li><strong>location</strong> slot: the first value in the return list from <a href="./../reference/plugins/services/reservation/reservation-api.html#listlocation">listLocation</a>.</li><li><strong>resourceType</strong> slot: &quot;table&quot; with the right type.</li><li><strong>duration</strong> slot: the first duration of the first value in the return list from <a href="./../reference/plugins/services/reservation/reservation-api.html#listresource">listResource</a>.</li></ul></li><li><p><a href="./../reference/annotations/fillstrategy.html">Fill Strategy</a>: for the slots filled by the business, their fill strategy should be Direct Fill. For the slots filled by the user, just follow the default fill strategy (Always Ask). Here is what fill strategy each slot should follow:</p><ul><li>Direct Fill: <strong>location</strong> slot, <strong>resourceType</strong> slot and <strong>duration</strong> slot.</li><li>Always Ask: <strong>number</strong> slot, <strong>datePicker</strong> slot and <strong>timePicker</strong> slot.</li></ul></li><li><p><a href="./../reference/annotations/valuecheck.html">Value Check</a>: when a slot value is provided by the user, you can use value check to validate this value. In this guide, following the default recovering strategy would be fine. Here are the rules that make each slot valid:</p><ul><li><strong>number</strong> slot: there is at least one table which can seat this number of people.</li><li><strong>datePicker</strong> slot: there is at least one table under the restrictions provided by business and the values (number and date) provided by the user.</li><li><strong>timePicker</strong> slot: there is at least one table under the restrictions provided by business and the values (number, date and time) provided by the user.</li></ul></li><li><p><a href="./../reference/annotations/confirmation.html">Confirmation</a>: when the user has provided all the values needed, you can ask the user to confirm their choice.</p></li></ol><p>Now, add the following dialog annotations to the <strong>MakeReservation</strong> skill:</p><h5 id="add-slot-level-annotation-to-location" tabindex="-1">Add slot level annotation to location <a class="header-anchor" href="#add-slot-level-annotation-to-location" aria-label="Permalink to &quot;Add slot level annotation to location&quot;">​</a></h5><h6 id="interaction-layer" tabindex="-1">Interaction layer <a class="header-anchor" href="#interaction-layer" aria-label="Permalink to &quot;Interaction layer&quot;">​</a></h6><p><strong>Slot annotations</strong>: <strong>location</strong> slot</p><ul><li>Fill Strategy: Direct Fill</li><li>Initialization with the following Association:</li></ul><div class="language-kotlin"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">reservation</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">listLocation</span><span style="color:#89DDFF;">().</span><span style="color:#A6ACCD;">first</span><span style="color:#89DDFF;">()</span></span></code></pre></div><h5 id="add-slot-level-annotation-to-resourcetype" tabindex="-1">Add slot level annotation to resourceType <a class="header-anchor" href="#add-slot-level-annotation-to-resourcetype" aria-label="Permalink to &quot;Add slot level annotation to resourceType&quot;">​</a></h5><h6 id="interaction-layer-1" tabindex="-1">Interaction layer <a class="header-anchor" href="#interaction-layer-1" aria-label="Permalink to &quot;Interaction layer&quot;">​</a></h6><p><strong>resourceType</strong> slot</p><ul><li>Fill Strategy: Direct Fill</li><li>Initialization with the following Association:</li></ul><div class="language-kotlin"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">services.opencui.reservation</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">ResourceType</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">table</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span></code></pre></div><h5 id="add-slot-level-annotation-to-duration" tabindex="-1">Add slot level annotation to duration <a class="header-anchor" href="#add-slot-level-annotation-to-duration" aria-label="Permalink to &quot;Add slot level annotation to duration&quot;">​</a></h5><h6 id="interaction-layer-2" tabindex="-1">Interaction layer <a class="header-anchor" href="#interaction-layer-2" aria-label="Permalink to &quot;Interaction layer&quot;">​</a></h6><p><strong>duration</strong> slot</p><ul><li>Fill Strategy: Direct Fill</li><li>Initialization with the following Association:</li></ul><div class="language-kotlin"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">reservation</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">listResource</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">location</span><span style="color:#89DDFF;">!!,</span><span style="color:#A6ACCD;"> resourceType</span><span style="color:#89DDFF;">!!,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">).</span><span style="color:#A6ACCD;">first</span><span style="color:#89DDFF;">()!!.</span><span style="color:#A6ACCD;">durations</span><span style="color:#89DDFF;">!!.</span><span style="color:#A6ACCD;">first</span><span style="color:#89DDFF;">()</span></span></code></pre></div><h5 id="add-slot-level-annotation-to-number" tabindex="-1">Add slot level annotation to number <a class="header-anchor" href="#add-slot-level-annotation-to-number" aria-label="Permalink to &quot;Add slot level annotation to number&quot;">​</a></h5><h6 id="interaction-layer-3" tabindex="-1">Interaction layer <a class="header-anchor" href="#interaction-layer-3" aria-label="Permalink to &quot;Interaction layer&quot;">​</a></h6><p><strong>number</strong> slot</p><ul><li>Fill Strategy: Always Ask</li><li>Value Check with the following Condition:</li></ul><div class="language-kotlin"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">filterTables</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">reservation</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">listResource</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">location</span><span style="color:#89DDFF;">!!,</span><span style="color:#A6ACCD;"> resourceType</span><span style="color:#89DDFF;">!!,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null,</span><span style="color:#A6ACCD;"> duration</span><span style="color:#89DDFF;">!!)).</span><span style="color:#A6ACCD;">isNotEmpty</span><span style="color:#89DDFF;">()</span></span></code></pre></div><h6 id="language-layer" tabindex="-1">Language layer <a class="header-anchor" href="#language-layer" aria-label="Permalink to &quot;Language layer&quot;">​</a></h6><p>In order to support users providing values without prompt, add <strong>Names</strong> for these slots first:</p><ol><li><strong>number</strong> slot: number of people</li><li>Prompt: How many people will you need the reservation for?</li><li>Value Check: There is no available table for <code>\${number}</code> people, please choose another number.</li></ol><h5 id="add-slot-level-annotation-to-datepicker" tabindex="-1">Add slot level annotation to datePicker <a class="header-anchor" href="#add-slot-level-annotation-to-datepicker" aria-label="Permalink to &quot;Add slot level annotation to datePicker&quot;">​</a></h5><h6 id="interaction-layer-4" tabindex="-1">Interaction layer <a class="header-anchor" href="#interaction-layer-4" aria-label="Permalink to &quot;Interaction layer&quot;">​</a></h6><p><strong>datePicker</strong> slot</p><ul><li>Fill Strategy: Always Ask</li><li>Value Check with the following Condition:</li></ul><div class="language-kotlin"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">filterTables</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">reservation</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">listResource</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">location</span><span style="color:#89DDFF;">!!,</span><span style="color:#A6ACCD;"> resourceType</span><span style="color:#89DDFF;">!!,</span><span style="color:#A6ACCD;"> datePicker</span><span style="color:#89DDFF;">!!.</span><span style="color:#A6ACCD;">date</span><span style="color:#89DDFF;">!!,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null,</span><span style="color:#A6ACCD;"> duration</span><span style="color:#89DDFF;">!!)).</span><span style="color:#A6ACCD;">isNotEmpty</span><span style="color:#89DDFF;">()</span></span></code></pre></div><h6 id="language-layer-1" tabindex="-1">Language layer <a class="header-anchor" href="#language-layer-1" aria-label="Permalink to &quot;Language layer&quot;">​</a></h6><p>In order to support users providing values without prompt, add <strong>Names</strong> for these slots first:</p><ol><li><strong>datePicker</strong> slot: date</li><li>Prompt: Which day will you be joining us on?</li><li>Value Check: There is no available table for <code>\${number}</code> on <code>\${datePicker!!.date!!.expression()}</code>, please choose another date.</li></ol><h5 id="add-slot-level-annotation-to-timepicker" tabindex="-1">Add slot level annotation to timePicker <a class="header-anchor" href="#add-slot-level-annotation-to-timepicker" aria-label="Permalink to &quot;Add slot level annotation to timePicker&quot;">​</a></h5><h6 id="interaction-layer-5" tabindex="-1">Interaction layer <a class="header-anchor" href="#interaction-layer-5" aria-label="Permalink to &quot;Interaction layer&quot;">​</a></h6><p><strong>timePicker</strong> slot</p><ul><li>Fill Strategy: Always Ask</li><li>Value Check with the following Condition:</li></ul><div class="language-kotlin"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">filterTables</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">reservation</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">listResource</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">location</span><span style="color:#89DDFF;">!!,</span><span style="color:#A6ACCD;"> resourceType</span><span style="color:#89DDFF;">!!,</span><span style="color:#A6ACCD;"> datePicker</span><span style="color:#89DDFF;">!!.</span><span style="color:#A6ACCD;">date</span><span style="color:#89DDFF;">!!,</span><span style="color:#A6ACCD;"> timePicker</span><span style="color:#89DDFF;">!!.</span><span style="color:#A6ACCD;">time</span><span style="color:#89DDFF;">!!,</span><span style="color:#A6ACCD;"> duration</span><span style="color:#89DDFF;">!!)).</span><span style="color:#A6ACCD;">isNotEmpty</span><span style="color:#89DDFF;">()</span></span></code></pre></div><h6 id="language-layer-2" tabindex="-1">Language layer <a class="header-anchor" href="#language-layer-2" aria-label="Permalink to &quot;Language layer&quot;">​</a></h6><p>In order to support users providing values without prompt, add <strong>Names</strong> for these slots first:</p><ol><li><strong>timePicker</strong> slot: time</li><li>Prompt: What time would you like the reservation for?</li><li>Value Check: There is no available table for <code>\${number}</code> at <code>\${timePicker!!.time!!.expression()}</code> on <code>\${datePicker!!.date!!.expression()}</code>, please choose another time.</li></ol><h5 id="add-type-level-annotation" tabindex="-1">Add type level annotation <a class="header-anchor" href="#add-type-level-annotation" aria-label="Permalink to &quot;Add type level annotation&quot;">​</a></h5><h6 id="interaction-layer-6" tabindex="-1">Interaction layer <a class="header-anchor" href="#interaction-layer-6" aria-label="Permalink to &quot;Interaction layer&quot;">​</a></h6><p>Confirmation with the following Condition:</p><div class="language-kotlin"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">number </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> datePicker</span><span style="color:#89DDFF;">!!.</span><span style="color:#A6ACCD;">date </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> timePicker</span><span style="color:#89DDFF;">!!.</span><span style="color:#A6ACCD;">time </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null</span></span></code></pre></div><h6 id="language-layer-3" tabindex="-1">Language layer <a class="header-anchor" href="#language-layer-3" aria-label="Permalink to &quot;Language layer&quot;">​</a></h6><ol><li>Confirmation: Are you sure to book a table for <code>\${number}</code> at <code>\${timePicker!!.time!!.expression()}</code> on <code>\${datePicker!!.date!!.expression()}</code>?</li><li>Expressions</li></ol><p>When a user wants to make a reservation, he might say &quot;<em>I want to book a table</em>&quot; or he might mention a specific date, like &quot;<em>book a table tomorrow</em>&quot;. To cover the above situations, add the following expressions to the <strong>MakeReservation</strong> skill:</p><ul><li>I want to book a table</li><li>I want to book a table <code>$datePicker$</code></li><li>I want to book a table at <code>$timePicker$</code></li><li>I want to book a table for <code>$number$</code></li></ul><div class="warning custom-block"><p class="custom-block-title">Attention</p><p>Do <strong>NOT</strong> copy and paste the value wrapped by <code>$</code>, please type the value instead.</p></div><h4 id="configure-response" tabindex="-1">Configure response <a class="header-anchor" href="#configure-response" aria-label="Permalink to &quot;Configure response&quot;">​</a></h4><p>When a user has provided all the information needed to make a reservation, the chatbot should inform the user whether the reservation has been made successfully.</p><h5 id="define-branch-for-no-available-tables" tabindex="-1">Define branch: for no available tables <a class="header-anchor" href="#define-branch-for-no-available-tables" aria-label="Permalink to &quot;Define branch: for no available tables&quot;">​</a></h5><h6 id="interaction-layer-7" tabindex="-1">Interaction layer <a class="header-anchor" href="#interaction-layer-7" aria-label="Permalink to &quot;Interaction layer&quot;">​</a></h6><p>To do so, create a branch and add <strong>Single Value Message</strong> actions in the branch and the default response. The message in the branch is used to inform of a successful reservation, while another message is to inform of failure.</p><p>The condition of the branch should be</p><div class="language-kotlin"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">makeReservation</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">false</span></span></code></pre></div><h6 id="language-layer-4" tabindex="-1">Language layer <a class="header-anchor" href="#language-layer-4" aria-label="Permalink to &quot;Language layer&quot;">​</a></h6><p>For responses, add the following templates in <strong>Single Value Message</strong>: 2. Default: Sorry, the table you want to book is not available at present. You may change to another time or date, and try it again.</p><h5 id="default-branch-for-reservation-success" tabindex="-1">Default branch: for reservation success <a class="header-anchor" href="#default-branch-for-reservation-success" aria-label="Permalink to &quot;Default branch: for reservation success&quot;">​</a></h5><h6 id="language-layer-5" tabindex="-1">Language layer <a class="header-anchor" href="#language-layer-5" aria-label="Permalink to &quot;Language layer&quot;">​</a></h6><p>Branch: Your reservation has been made. We&#39;ll see you at <code>\${timePicker!!.time!!.expression()}</code> on <code>\${datePicker!!.date!!.expression()}</code>. You can check the reservation under your ID: <code>\${userIdentifier?.userId}</code>.</p><p>When all is done, be sure to <a href="./../reference/platform/versioncontrol.html#review-changes">view all the changes</a> and <strong>merge them into the master</strong>.</p><p>:🎉: Congratulations! You&#39;ve built up a reservation module.</p>`,113),r=[l];function i(p,c,d,h,u,y){return t(),a("div",null,r)}const b=e(n,[["render",i]]);export{f as __pageData,b as default};
