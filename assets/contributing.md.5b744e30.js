import{_ as e,c as a,o,O as t}from"./chunks/framework.8e4cc2b6.js";const b=JSON.parse('{"title":"Contributing Guide","description":"","frontmatter":{"sidebar":"auto"},"headers":[],"relativePath":"contributing.md","lastUpdated":1646586895000}'),r={name:"contributing.md"},s=t('<h1 id="contributing-guide" tabindex="-1">Contributing Guide <a class="header-anchor" href="#contributing-guide" aria-label="Permalink to &quot;Contributing Guide&quot;">​</a></h1><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>This repository employs a <a href="https://en.wikipedia.org/wiki/Monorepo" target="_blank" rel="noreferrer">monorepo</a> setup with <a href="https://classic.yarnpkg.com/en/docs/workspaces" target="_blank" rel="noreferrer">yarn classic workspaces</a>, and hosts a number of associated but separated packages in the <code>packages</code> directory:</p><ul><li><p><code>@vuepress/core</code>: The VuePress core. Provides pure Node API to generate VuePress app, including page handling, plugin system and data preparation.</p></li><li><p><code>@vuepress/client</code>: The VuePress client package. Provides the client entry, and exports types and composable utils that can be used in client side development.</p></li><li><p><code>@vuepress/bundler-vite</code>: The VuePress bundler package with vite. Use vite to <code>dev</code> and <code>build</code> VuePress app that generated by <code>@vuepress/core</code>.</p></li><li><p><code>@vuepress/bundler-webpack</code>: The VuePress bundler package with webpack. Use webpack to <code>dev</code> and <code>build</code> VuePress app that generated by <code>@vuepress/core</code>.</p></li><li><p><code>@vuepress/cli</code>: The VuePress command line interface (CLI) package. It will resolve user config file, and create VuePress app with <code>@vuepress/core</code>, then use <code>@vuepress/bundler-${name}</code> to execute corresponding command.</p></li><li><p><code>@vuepress/theme-default</code>: The VuePress default theme.</p></li><li><p><code>@vuepress/plugin-${name}</code>: Official plugins.</p></li><li><p><code>@vuepress/shared</code>: Utilities that shared between node side and client side.</p></li><li><p><code>@vuepress/utils</code>: Utilities that should only be used in node side.</p></li><li><p><code>vuepress</code>: A wrapper of <code>vuepress-vite</code>.</p></li><li><p><code>vuepress-vite</code>: A wrapper of <code>@vuepress/cli</code> + <code>@vuepress/bundler-vite</code> + <code>@vuepress/theme-default</code>. If users want to use default theme with vite, they can simply install this package.</p></li><li><p><code>vuepress-webpack</code>: A wrapper of <code>@vuepress/cli</code> + <code>@vuepress/bundler-webpack</code> + <code>@vuepress/theme-default</code>. If users want to use default theme with webpack, they can simply install this package.</p></li></ul><h2 id="development-setup" tabindex="-1">Development Setup <a class="header-anchor" href="#development-setup" aria-label="Permalink to &quot;Development Setup&quot;">​</a></h2><p>Pre-requirement:</p><ul><li><a href="http://nodejs.org" target="_blank" rel="noreferrer">Node.js</a> <strong>version 14+</strong></li><li><a href="https://classic.yarnpkg.com/en/docs/install" target="_blank" rel="noreferrer">Yarn v1 classic</a></li></ul><p>Clone the repo, and install dependencies:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span></span></code></pre></div><p>Start watching source files:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dev</span></span></code></pre></div><p>Open another terminal, and start developing the documentation site:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docs:dev</span></span></code></pre></div><p>Main tools that used in this project:</p><ul><li><a href="https://www.typescriptlang.org/" target="_blank" rel="noreferrer">TypeScript</a> as the development language</li><li><a href="https://jestjs.io/" target="_blank" rel="noreferrer">Jest</a> for unit testing</li><li><a href="https://eslint.org/" target="_blank" rel="noreferrer">ESLint</a> + <a href="https://prettier.io/" target="_blank" rel="noreferrer">Prettier</a> for code linting and formatting</li></ul><h2 id="scripts" tabindex="-1">Scripts <a class="header-anchor" href="#scripts" aria-label="Permalink to &quot;Scripts&quot;">​</a></h2><h3 id="yarn-build" tabindex="-1"><code>yarn build</code> <a class="header-anchor" href="#yarn-build" aria-label="Permalink to &quot;`yarn build`&quot;">​</a></h3><p>The <code>build</code> script uses <code>tsc</code> to compile typescript source files to javascript dist files.</p><p>You may need to run this script first after your clone this repository, because the dist files are ignored by <code>.gitignore</code>.</p><h3 id="yarn-copy" tabindex="-1"><code>yarn copy</code> <a class="header-anchor" href="#yarn-copy" aria-label="Permalink to &quot;`yarn copy`&quot;">​</a></h3><p>The <code>copy</code> script of root project runs <code>copy</code> script in all packages, copying some resources from source directory to dist directory.</p><p>Some source files (e.g. <code>.vue</code>, <code>.css</code> files) can not be processed by <code>build</code> script, but should keep the same relative path in the dist directory.</p><p>You may need to run this script after your clone this repository, too.</p><h3 id="yarn-dev" tabindex="-1"><code>yarn dev</code> <a class="header-anchor" href="#yarn-dev" aria-label="Permalink to &quot;`yarn dev`&quot;">​</a></h3><p>The <code>dev</code> script runs <code>copy</code> and <code>build</code> scripts in watch mode.</p><h3 id="yarn-clean" tabindex="-1"><code>yarn clean</code> <a class="header-anchor" href="#yarn-clean" aria-label="Permalink to &quot;`yarn clean`&quot;">​</a></h3><p>The <code>clean</code> script runs <code>clean</code> script in all packages, cleaning all the dist files and caches. In other words, it will remove all the files that generated by <code>build</code>, <code>copy</code> and <code>dev</code> scripts.</p><p>It&#39;s used before you want to re-build source files from a clean / initial state.</p><h3 id="yarn-docs" tabindex="-1"><code>yarn docs:*</code> <a class="header-anchor" href="#yarn-docs" aria-label="Permalink to &quot;`yarn docs:*`&quot;">​</a></h3><h4 id="yarn-docs-build-yarn-docs-dev-yarn-docs-clean" tabindex="-1"><code>yarn docs:build</code>, <code>yarn docs:dev</code>, <code>yarn docs:clean</code> <a class="header-anchor" href="#yarn-docs-build-yarn-docs-dev-yarn-docs-clean" aria-label="Permalink to &quot;`yarn docs:build`, `yarn docs:dev`, `yarn docs:clean`&quot;">​</a></h4><p>The <code>docs:</code> prefix indicates that these scripts are for documentation, i.e. the <code>docs</code> directory.</p><p>VuePress is using itself to build its own documentation site.</p><p>You need to run <code>yarn build &amp;&amp; yarn copy</code> to build VuePress source files first, then run these <code>docs:</code> scripts to develop and build our documentation.</p><h4 id="yarn-docs-serve" tabindex="-1"><code>yarn docs:serve</code> <a class="header-anchor" href="#yarn-docs-serve" aria-label="Permalink to &quot;`yarn docs:serve`&quot;">​</a></h4><p>Serve the documentation site locally.</p><p>You need to run <code>yarn docs:build</code> first to generate the documentation dist files, and then run <code>yarn docs:serve</code> to serve them.</p><h3 id="yarn-lint" tabindex="-1"><code>yarn lint</code> <a class="header-anchor" href="#yarn-lint" aria-label="Permalink to &quot;`yarn lint`&quot;">​</a></h3><p>The <code>lint</code> script uses ESLint to check all source files.</p><h3 id="yarn-test" tabindex="-1"><code>yarn test</code> <a class="header-anchor" href="#yarn-test" aria-label="Permalink to &quot;`yarn test`&quot;">​</a></h3><p>The <code>test</code> script uses Jest to run unit testings.</p><h2 id="documentation" tabindex="-1">Documentation <a class="header-anchor" href="#documentation" aria-label="Permalink to &quot;Documentation&quot;">​</a></h2><p>VuePress documentation is powered by VuePress itself, which is built from the source code of this repository.</p><p>All the markdown source files are placed in <code>docs</code> directory. We are maintaining two translations:</p><ul><li>English (en-US) in <code>/</code> path</li><li>Chinese (zh-CN) in <code>/zh/</code> path</li></ul><p>We have two different deployments:</p><ul><li>Release deployment powered by <a href="https://www.netlify.com" target="_blank" rel="noreferrer">Netlify</a>. This deployment is built from the latest released version, so users will not see unreleased changes. The domain name is <a href="https://v2.vuepress.vuejs.org" target="_blank" rel="noreferrer">https://v2.vuepress.vuejs.org</a>.</li><li>Developer deployment powered by <a href="https://pages.github.com" target="_blank" rel="noreferrer">GitHub Pages</a>. This deployment is built from the latest commit, so developers could preview the latest changes. The domain name is <a href="https://vuepress.github.io" target="_blank" rel="noreferrer">https://vuepress.github.io</a>.</li></ul>',46),i=[s];function n(c,d,l,p,u,h){return o(),a("div",null,i)}const m=e(r,[["render",n]]);export{b as __pageData,m as default};
