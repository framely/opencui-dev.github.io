import{_ as u,o as e,c as t,O as h,u as p,l as m,b as c,F as g,L as f,z as s,t as l,C as _,G as d}from"./chunks/framework.8e4cc2b6.js";const v={},y={class:"footer-small"},b=h('<div class="links"><p>OpenCUI, Inc Â© 2023 All rights reserved</p></div><div class="links"><a href="https://opencui.medium.com/">Medium</a><a href="/policy/terms.html">Terms</a><a href="/policy/privacy.html">Privacy</a></div>',2),I=[b];function k(i,o){return e(),t("section",y,I)}const w=u(v,[["render",k]]);const x={key:0,class:"container-s"},C=["href"],O={class:"button-small"},U={setup(i){const{site:o,frontmatter:n}=p(),r=m(()=>Array.isArray(n.value.cta)?n.value.cta:[]);return(B,N)=>c(r).length?(e(),t("div",x,[(e(!0),t(g,null,f(c(r),a=>(e(),t("div",{key:a.details},[s("h2",null,l(a.details),1),s("a",{href:a.link,target:"_blank",rel:"noopener noreferrer"},[s("button",O,l(a.title),1)],8,C)]))),128))])):_("",!0)}},S=u(U,[["__scopeId","data-v-07c72892"]]),D=JSON.parse(`{"title":"OpenCUI","description":"","frontmatter":{"layout":"home","title":"OpenCUI","hero":{"image":{"src":"images/hero.png","alt":"VitePress"},"tagline":"Time to deliver personalized services, via chat.","text":"Type-based Approach for Chatbot Development","actions":[{"theme":"brand","text":"Start to Build","link":"https://build.opencui.io","type":"primary"},{"theme":"alt","text":"Learn More","link":"/guide/","type":"secondary"}]},"features":[{"title":"CUI for your APIs","details":"Building valuable services is hard, and we can not help with that. But if you already have APIs, building conversational user interface for it should be easy, with OpenCUI.","icon":{"src":"/images/featureIcons/cui.svg"}},{"title":"Separation of Concerns","details":"Decompose chatbot building into multiple concerns like service, interaction and language perception, so different aspects can be handled by different people.","icon":{"src":"/images/featureIcons/separate.svg"}},{"title":"Component-Based","details":"Never build from scratch, build complex behavior by reusing black-box components, so you can focus on what you want instead of how to implement it.","icon":{"src":"/images/featureIcons/component.svg"}},{"title":"Hot Fixable NLU","details":"Accuracy is not the most important metric when it comes to dialog understanding. To deploy a chatbot into production, every thing need to be hot fixable by the operation team.","icon":{"src":"/images/featureIcons/hotfix.svg"}},{"title":"Open Source Runtime","details":"Reactjs enables teams to focus on their application dependent interaction logic, instead of reinventing wheels. OpenCUI is doing the same for chatbots.","icon":{"src":"/images/featureIcons/open-source-line.svg"}},{"title":"Universal Messages","details":"Omnichannel made easy, the universal messages you defined once will get automatically translated into native message for each channel.","icon":{"src":"/images/featureIcons/universal-message.svg"}},{"title":"Support","details":"Ran into conversations that bot can't handle, hand over to live agent with skill based routing, integration with any contact center software.","icon":{"src":"/images/featureIcons/support.svg"}},{"title":"Multi-language Ready","details":"The same interaction logic should be shared between all the different languages, so that you can use people with entirely different skillsets for this.","icon":{"src":"/images/featureIcons/multi-language.svg"}},{"title":"Fully Extensible","details":"The chatbot defined on the OpenCUI are generated into kotlin code, which makes it easy to integrate with any channel, support and services, take full advantage of java/kotlin ecosystem.","icon":{"src":"/images/featureIcons/raw-code.svg"}}],"cta":[{"details":"Import what you need, customize and deploy.","title":"Get Started","link":"/guide/"}],"footerHtml":true},"headers":[],"relativePath":"index.md","lastUpdated":1682040700000}`),A={name:"index.md"},F=Object.assign(A,{setup(i){return(o,n)=>(e(),t("div",null,[d(S,{frontmatter:[{details:"Import what you need, customize and deploy.",title:"Get Started",link:"/guide/"}]},null,8,["frontmatter"]),d(w)]))}});export{D as __pageData,F as default};
